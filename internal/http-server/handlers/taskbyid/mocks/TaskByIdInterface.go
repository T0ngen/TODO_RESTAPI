// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	postgresql "TodoRESTAPI/internal/storage/postgresql"

	mock "github.com/stretchr/testify/mock"
)

// TaskByIdInterface is an autogenerated mock type for the TaskByIdInterface type
type TaskByIdInterface struct {
	mock.Mock
}

// CheckTaskById provides a mock function with given fields: username, id
func (_m *TaskByIdInterface) CheckTaskById(username string, id string) (*postgresql.TaskById, error) {
	ret := _m.Called(username, id)

	if len(ret) == 0 {
		panic("no return value specified for CheckTaskById")
	}

	var r0 *postgresql.TaskById
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*postgresql.TaskById, error)); ok {
		return rf(username, id)
	}
	if rf, ok := ret.Get(0).(func(string, string) *postgresql.TaskById); ok {
		r0 = rf(username, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*postgresql.TaskById)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(username, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewTaskByIdInterface creates a new instance of TaskByIdInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTaskByIdInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *TaskByIdInterface {
	mock := &TaskByIdInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
