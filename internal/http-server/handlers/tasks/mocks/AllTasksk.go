// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	postgresql "TodoRESTAPI/internal/storage/postgresql"

	mock "github.com/stretchr/testify/mock"
)

// AllTasksk is an autogenerated mock type for the AllTasksk type
type AllTasksk struct {
	mock.Mock
}

// CheckAllUserTasks provides a mock function with given fields: username
func (_m *AllTasksk) CheckAllUserTasks(username string) ([]postgresql.Task, error) {
	ret := _m.Called(username)

	var r0 []postgresql.Task
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]postgresql.Task, error)); ok {
		return rf(username)
	}
	if rf, ok := ret.Get(0).(func(string) []postgresql.Task); ok {
		r0 = rf(username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]postgresql.Task)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(username)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAllTasksk interface {
	mock.TestingT
	Cleanup(func())
}

// NewAllTasksk creates a new instance of AllTasksk. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAllTasksk(t mockConstructorTestingTNewAllTasksk) *AllTasksk {
	mock := &AllTasksk{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
